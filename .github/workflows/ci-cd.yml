name: CI/CD pipeline

on:
  push:
    branches: ["master"]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: ["master"]
    paths-ignore:
      - "**.md"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"

      - name: Install dependencies
        run: go get -t ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Generate GITHUB_SHA
        id: github-sha
        shell: bash
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "sha=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Publish Image to DigitalOcean Container Registry
        shell: bash
        run: |
          doctl registry login --expiry-seconds 600
          docker build . -t registry.digitalocean.com/infamous55/habit_tracker:${{ steps.github-sha.outputs.sha }}
          docker tag registry.digitalocean.com/infamous55/habit_tracker:${{ steps.github-sha.outputs.sha }} registry.digitalocean.com/infamous55/habit_tracker:latest
          docker push registry.digitalocean.com/infamous55/habit_tracker:latest

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    env:
      APP_PORT: ${{ vars.APP_PORT }}
      APP_JWT_SECRET: ${{ secrets.APP_JWT_SECRET }}
      APP_GRAPHQL_PLAYGROUND_PASSWORD: ${{ secrets.APP_GRAPHQL_PLAYGROUND_PASSWORD }}
      APP_MONGODB_DATABASE_NAME: ${{ secrets.APP_MONGODB_DATABASE_NAME }}
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"

      - name: Install dependencies
        run: go get -t ./...

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Refresh Pulumi state
        uses: pulumi/actions@v4
        id: pulumi-refresh
        with:
          command: refresh
          stack-name: infamous55/habit-tracker/dev
          work-dir: ./iac/

      - name: Update DigitalOcean resources with Pulumi
        uses: pulumi/actions@v4
        id: pulumi-update
        with:
          command: up
          stack-name: infamous55/habit-tracker/dev
          work-dir: ./iac/
